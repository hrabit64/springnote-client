name: Client Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup tmp dir for secrets
        run: mkdir -p tmp

      - name: Get secrets
        uses: actions/checkout@v3
        with:
          repository: hrabit64/springnote-client-secret
          ref: main
          path: "tmp"
          token: ${{ secrets.TOKEN }}

      - name: Move .env file
        run: mv tmp/.env .env

      - name: Remove tmp dir
        run: rm -rf tmp

      - name: Install dependencies and build
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Archive production artifacts
        run: tar -czvf client.tar.gz .output Dockerfile docker-compose.prod.yml

      - name: Push archive to target server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          source: client.tar.gz
          target: /home/springbot/client

      - name: Build image and deploy on target server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          script: |
            cd /home/springbot/client
            tar -xzvf client.tar.gz  
            rm -f client.tar.gz
            docker build -t springnote-client .
            docker compose -f docker-compose.prod.yml up -d
